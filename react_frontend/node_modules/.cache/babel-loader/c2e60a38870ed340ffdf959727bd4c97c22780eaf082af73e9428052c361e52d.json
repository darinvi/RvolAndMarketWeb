{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projects\\\\RvolAndMarketWeb\\\\react_frontend\\\\src\\\\rvol\\\\components\\\\GetRvol.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetRvol() {\n  _s();\n  const [ticker, setTicker] = useState('');\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  function handleLoading() {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n  async function getRelativeVolume() {\n    setLoading(curr => !curr);\n    try {\n      const res = await axios.post('http://localhost:8000/rvol', {\n        ticker: ticker\n      });\n      setResult(res.data).then(console.log(result.data));\n    } catch (err) {\n      console.log(err);\n    }\n    setTicker('');\n    setLoading(curr => !curr);\n  }\n  function renderData() {\n    const render_result = result && Object.entries(result).map(e => {\n      if (e[0] != 'data') {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [e[0], \": \", e[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rvol-result\",\n      children: result === '' ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Insert Ticker Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }, this) : render_result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"getRvol\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rvol-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stock\",\n        children: \"Ticker:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"stock\",\n        value: ticker,\n        onChange: e => setTicker(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getRelativeVolume,\n        className: \"MyButton\",\n        children: \"Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), loading ? handleLoading() : renderData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(GetRvol, \"j7hYGWvB8HnZ9eNP1W3iOHIUOJ0=\");\n_c = GetRvol;\nvar _c;\n$RefreshReg$(_c, \"GetRvol\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GetRvol","_s","ticker","setTicker","result","setResult","loading","setLoading","handleLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","getRelativeVolume","curr","res","post","data","then","console","log","err","renderData","render_result","Object","entries","map","e","className","htmlFor","type","id","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/projects/RvolAndMarketWeb/react_frontend/src/rvol/components/GetRvol.js"],"sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nexport default function GetRvol() {\n    const [ticker, setTicker] = useState('')\n    const [result, setResult] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    function handleLoading() {\n        return <h3>Loading...</h3>\n    }\n\n    async function getRelativeVolume() {\n        setLoading((curr) => !curr)\n        try {\n            const res = await axios.post('http://localhost:8000/rvol', { ticker: ticker })\n            setResult(res.data)\n            .then(console.log(result.data))\n\n        } catch (err) {\n            console.log(err)\n        }\n        setTicker('')\n        setLoading((curr) => !curr)\n    }\n\n    function renderData() {\n        const render_result = result && Object.entries(result).map(e => {\n            if (e[0] != 'data') {\n                return <h3>{e[0]}: {e[1]}</h3>\n            }\n        })\n\n        return (\n            <div className='rvol-result'>\n                {result === '' ? <h3>Insert Ticker Name</h3> : render_result}\n            </div>\n        )\n    }\n\n    return (\n        <div className='getRvol'>\n            <div className='rvol-input'>\n                <label htmlFor='stock'>Ticker:</label>\n                <input type='text' id='stock' value={ticker} onChange={e => setTicker(e.target.value)}></input>\n                <button onClick={getRelativeVolume} className='MyButton'>Get Data</button>\n            </div>\n            {loading ? handleLoading() : renderData()}\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}