{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projects\\\\RvolAndMarketWeb\\\\react_frontend\\\\src\\\\backtests\\\\Backtests.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Backtests() {\n  _s();\n  useEffect(() => {\n    document.title = 'Backtests';\n  });\n  const [strategy, setStrategy] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [symbol, setSymbol] = useState(null);\n  const strategies = {\n    'Second day- green': \"Measures how often a stock closes green after having an unusually strong buying day\",\n    'Second day- red': \"Measures how often a stock closes red after having an unusually weak selling day\",\n    'Fresh gap- up': \"Measures how often a stock holds it's gap; how often it it closes green; etc\",\n    'Fresh gap- down': \"Measures how often a stock holds it's gap; how often it it closes red; etc\"\n  };\n  const render_strategies = Object.entries(strategies).map(e => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e,\n      children: e[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  });\n  function onSelectChange(e) {\n    const dataSplit = e.target.value.split(',');\n    setStrategy(dataSplit[0]);\n    setDescription(dataSplit[1]);\n  }\n  function handleButtonClick() {\n    setLoading(true);\n    fetch('http://localhost:8000/backtest', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ticker: symbol\n      })\n    }).then(response => response.json()).then(res => {\n      setData(res);\n      setLoading(false);\n    }).catch(error => {\n      console.log(error);\n      setLoading(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backtest-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"strategy-select\",\n      children: \"Choose Strategy: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: onSelectChange,\n      id: \"strategy-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), render_strategies]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), strategy && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategy-choose\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: strategy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), strategy != '' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stock-input\",\n          children: \"Symbol:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"stock-input\",\n          onChange: e => {\n            setSymbol(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"MyButton\",\n        onClick: handleButtonClick,\n        children: \"Get Stats!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), data && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: data.ne\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Backtests, \"is5ZFlmWPPTM9yM64wzwSqRB2c4=\");\n_c = Backtests;\nvar _c;\n$RefreshReg$(_c, \"Backtests\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Backtests","_s","document","title","strategy","setStrategy","description","setDescription","data","setData","loading","setLoading","symbol","setSymbol","strategies","render_strategies","Object","entries","map","e","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectChange","dataSplit","target","split","handleButtonClick","fetch","method","headers","body","JSON","stringify","ticker","then","response","json","res","catch","error","console","log","className","htmlFor","onChange","id","type","onClick","ne","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/projects/RvolAndMarketWeb/react_frontend/src/backtests/Backtests.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function Backtests() {\r\n\r\n  useEffect(() => {\r\n    document.title = 'Backtests'\r\n  })\r\n\r\n  const [strategy, setStrategy] = useState(null)\r\n  const [description, setDescription] = useState(null)\r\n  const [data, setData] = useState(null)\r\n  const [loading, setLoading] = useState(null)\r\n  const [symbol, setSymbol] = useState(null)\r\n\r\n  const strategies = {\r\n    'Second day- green': \"Measures how often a stock closes green after having an unusually strong buying day\",\r\n    'Second day- red': \"Measures how often a stock closes red after having an unusually weak selling day\",\r\n    'Fresh gap- up': \"Measures how often a stock holds it's gap; how often it it closes green; etc\",\r\n    'Fresh gap- down': \"Measures how often a stock holds it's gap; how often it it closes red; etc\"\r\n  }\r\n\r\n  const render_strategies = Object.entries(strategies).map(e => {\r\n    return <option value={e}>{e[0]}</option>\r\n  })\r\n\r\n  function onSelectChange(e) {\r\n    const dataSplit = e.target.value.split(',')\r\n    setStrategy(dataSplit[0])\r\n    setDescription(dataSplit[1])\r\n  }\r\n\r\n  function handleButtonClick() {\r\n    setLoading(true);\r\n    fetch('http://localhost:8000/backtest', {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ticker:symbol}),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        setData(res);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"backtest-home\">\r\n      <label htmlFor=\"strategy-select\">Choose Strategy: </label>\r\n      <select onChange={onSelectChange} id=\"strategy-select\">\r\n        <option value=''>---</option>\r\n        {render_strategies}\r\n      </select>\r\n      {strategy &&\r\n        <div className=\"strategy-choose\">\r\n          <h2>{strategy}</h2>\r\n          <p>{description}</p>\r\n          {strategy != '' &&\r\n            <>\r\n              <label htmlFor=\"stock-input\">Symbol:</label>\r\n              <input type=\"text\" id=\"stock-input\" onChange={e => { setSymbol(e.target.value) }}></input>\r\n            </>}\r\n          <button className=\"MyButton\" onClick={handleButtonClick}>Get Stats!</button>\r\n        </div>}\r\n    {loading && <h3>Loading...</h3>}\r\n    {data && <h3>{data.ne}</h3>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}